name: Deploy to Docker Host

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Build and publish
        run: dotnet publish -c Release -o ./publish

      - name: Setup EF Tools 
        run: | 
          dotnet tool install --global dotnet-ef 
          dotnet tool restore 

      - name: Generate migration script
        run: dotnet ef migrations bundle --configuration Release --output ./migrations/migrate.sql
        
      - name: Copy Migrations Bundle
        run: |
          mkdir -p ./migrations
          cp ./migrations/migrate.sql ./publish
        
      - name: Build Docker image
        run: docker build --progress=plain -t miwebapp-imagen --build-arg CONNECTION_STRING="Server=149.50.149.217,1433;Database=MiWebApp;User Id=sa;Password=Password#;TrustServerCertificate=True;" ./

      - name: Login to Docker Hub 
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push to Docker Hub
        run: |
          docker build --progress=plain -t ${{ secrets.DOCKER_USERNAME }}/miwebapp-imagen:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/miwebapp-imagen:latest
          
      - name: SSH into server and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker stop webapp || true
            docker rm webapp || true
            docker network create webapp || true
            docker run -d -p 80:8080 \
              -e ConnectionStrings__MiWebAppContext="${{ secrets.DB_CONNECTION_STRING }}" \
              --network webapp \
              --name webapp ${{ secrets.DOCKER_USERNAME }}/miwebapp-imagen:latest /app/migrate.sql