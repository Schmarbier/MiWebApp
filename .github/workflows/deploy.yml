name: Deploy to Docker Host

on:
  push:
    branches:
      - main  # O la rama que uses para despliegues

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3  # Descarga el código

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'  # Tu versión de .NET

      - name: Build and publish
        run: dotnet publish -c Release -o ./publish

      - name: Build Docker image
        run: docker build -t miwebapp-imagen ./

      - name: Login to Docker Hub 
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag and push Docker image (opcional, si usas un registro)
        run: |
          docker tag miwebapp-imagen ${{ secrets.DOCKER_USERNAME }}/miwebapp-imagen:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/miwebapp-imagen:latest


      - name: SSH into server and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker stop webapp || true
            docker rm webapp || true
            docker network create webapp || true
            docker run -d -p 80:8080 \
              -e ConnectionStrings__MiWebAppContext="${{ secrets.DB_CONNECTION_STRING }}" \
              --network webapp \
              --name webapp ${{ secrets.DOCKER_USERNAME }}/miwebapp-imagen:latest